package data_structures;

public class Queue {
	
	// inserts the object obj into the queue
    public void enqueue(E obj) 
     
    // removes and returns the object at the front of the queue   
    public E dequeue() 
    
    // returns the number of objects currently in the queue    
    public int size() 
    
    // returns true if the queue is empty, otherwise false   
    public boolean isEmpty() 
    
    // returns but does not remove the object at the front of the queue   
    public E peek() 
    
    // returns true if the Object obj is in the queue    
    public boolean contains(E obj) 
     
    // returns the queue to an empty state  
    public void makeEmpty() 
    
    // removes the Object obj if it is in the queue and
    // returns true, otherwise returns false.
    public boolean remove(E obj)
    
    // returns an iterator of the elements in the queue.  The elements
    // must be in the same sequence as dequeue would return them.    
    public Iterator<E> iterator() 
    
}
