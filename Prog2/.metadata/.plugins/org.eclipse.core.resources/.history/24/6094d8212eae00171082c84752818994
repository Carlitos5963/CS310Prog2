package data_structures;

public class Stack {
	
	// inserts the object obj into the stack
    public void push(E obj) 
    
    // pops and returns the element on the top of the stack    
    public E pop() 
    
    // returns the number of elements currently in the stack
    public int size() 
    
    // return true if the stack is empty, otherwise false
    public boolean isEmpty()        
    
    // returns but does not remove the element on the top of the stack    
    public E peek() 
     
    // returns true if the object obj is in the stack,
    // otherwise false   
    public boolean contains(E obj) 
    
    // returns the stack to an empty state    
    public void makeEmpty() 
    
    // removes the Object obj if it is in the stack and
    // returns true, otherwise returns false.
    public boolean remove(E obj)    
    
    // returns a iterator of the elements in the stack.  The elements
    // must be in the same sequence as pop() would return them.    
    public Iterator<E> iterator() 
    
}
